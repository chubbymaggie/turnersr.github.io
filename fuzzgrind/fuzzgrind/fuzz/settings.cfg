;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; GENERAL settings
; input:  absolute default folder where first input is read
; output: absolute default folder where new inputs are created
; crash:  absolute default folder where inputs causing crashes are saved
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[GENERAL]
input  = testcase/
output = testcase/input/
crash  = testcase/crash/



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Fuzzed programs settings
; prog:      
; input:     
; ext:       
; min_bound: 
; max_bound: 
; stdin:     
; checker:   
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; real life binaries
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[rdjpgcom]
prog  = /usr/bin/rdjpgcom
input = input.jpg

[convert]
prog  = /usr/bin/convert
input = /usr/share/icons/application-default-icon.png
arg   = $input /tmp/bla.jpg
max_bound = 200

[convert2]
prog  = /usr/bin/convert
input = input.jpg
arg   = $input /tmp/bla.bmp
;max_bound = 500

[readelf]
prog  = /usr/bin/readelf
input = input.elf
arg   = -h $input
max_bound = 200

[evince]
prog  = /usr/bin/evince
input = input.pdf

[swfdump]
prog  = /usr/bin/swfdump
input = input.swf
max_bound = 1000

[js]
prog  = /home/gab/code/audit/mozilla/obj-browser/js/src/js
input = input.js
max_bound = 1000

[tiffinfo]
;prog  = /home/gab/code/audit/tiff-v3.4/build/bin/tiffinfo
;prog  = /home/gab/code/audit/tiff-3.8.1/build/bin/tiffinfo
prog  = /home/gab/code/audit/tiff-3.8.2/build/bin/tiffinfo
;prog  = /home/gab/code/audit/tiff-4.0.0beta2/build/bin/tiffinfo
input = input.tiff
;max_bound = 1000

[php]
prog  = /usr/bin/php
input = input.php
arg   = -r unserialize(file_get_contents("$input"));
max_bound = 200




;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; testcases
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[test]
prog    = testcase/test
input   = input.txt
checker = testcase

[test2]
prog    = testcase/test2
input   = input.txt
checker = testcase

[test3]
prog    = testcase/test3
input   = input.txt
checker = testcase

[test4]
prog    = testcase/test4
input   = input.txt
checker = testcase

[test5]
prog    = testcase/test5
input   = input.txt
checker = testcase

[test6]
prog    = testcase/test6
input   = input2.txt
checker = testcase

[test7]
prog    = testcase/test7
input   = input.txt
checker = testcase

[test8]
prog    = testcase/test8
input   = input2.txt
checker = testcase

[test9]
prog    = testcase/test9
input   = input.txt
checker = testcase

[test10]
prog    = testcase/test10
input   = input2.txt
checker = testcase

[test11]
prog    = testcase/test11
input   = input2.txt
checker = testcase

[test12]
prog    = testcase/test12
input   = input2.txt
checker = testcase

[test13]
prog    = testcase/test13
input   = input2.txt
checker = ptrace

[test14]
prog    = testcase/test14
input   = input.txt
checker = ptrace

[test15]
prog    = testcase/test15
input   = input.txt
checker = testcase

[md5]
prog    = testcase/md5
input   = input.txt
checker = testcase

[example]
prog    = testcase/example
input   = /var/run/motd
checker = ptrace

[strcmp]
prog    = testcase/strcmp
input   = input3.txt
checker = testcase

[ms08_067]
prog    = testcase/ms08_067
input   = input3.txt
checker = ptrace
stdin   = true

[urlencode]
prog    = testcase/urlencode
input   = input.txt
checker = ptrace
stdin   = true



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; IOLI crackmes. crackme 6 7 8 9: export LOL=
; http://radare.nopcode.org/wiki/index.php?n=Examples.Crackme
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[crackme0]
prog  = testcase/IOLI-crackme/crackme0x00
input = input2.txt
stdin = true
checker = crackme

[crackme1]
prog  = testcase/IOLI-crackme/crackme0x01
input = input2.txt
stdin = true
checker = crackme

[crackme2]
prog  = testcase/IOLI-crackme/crackme0x02
input = input2.txt
stdin = true
checker = crackme

[crackme3]
prog  = testcase/IOLI-crackme/crackme0x03
input = input2.txt
stdin = true
checker = crackme

[crackme4]
prog  = testcase/IOLI-crackme/crackme0x04
input = input2.txt
stdin = true
checker = crackme

[crackme5]
prog  = testcase/IOLI-crackme/crackme0x05
input = input2.txt
stdin = true
checker = crackme

[crackme6]
prog  = testcase/IOLI-crackme/crackme0x06
input = input2.txt
stdin = true
checker = crackme

[crackme7]
prog  = testcase/IOLI-crackme/crackme0x07
input = input2.txt
stdin = true
checker = crackme

[crackme8]
prog  = testcase/IOLI-crackme/crackme0x08
input = input2.txt
stdin = true
checker = crackme

[crackme9]
prog  = testcase/IOLI-crackme/crackme0x09
input = input2.txt
stdin = true
checker = crackme
