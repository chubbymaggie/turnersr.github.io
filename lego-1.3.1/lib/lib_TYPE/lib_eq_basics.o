Module lib_eq_basics Import "lib_eq";
[injective : {S|Type}{T|Type}{f:S->T}Prop
  = [S|Type][T|Type][f:S->T]{x,y:S}(Eq%%T (f x) (f y))->Eq%%S x y];
[Eq_sym : {t|Type}sym%%t (Eq|t)
  = [t|Type][t1,u|t][H:Eq|t t1 u]Eq_subst%%t%%t1%%u H ([x:t]Eq%%t x t1) (Eq_refl%%t t1)];
[Eq_trans : {t|Type}trans%%t (Eq|t)
  = [t|Type][t1,u,v|t][H:Eq|t t1 u][H1:Eq|t u v]Eq_subst%%t%%u%%v H1 ([x:t]Eq%%t t1 x) H];
[Eq_resp : {A|Type}{B|Type}{f:A->B}respect%%A%%B f Eq
  = [A|Type][B|Type][f:A->B][t,u|A][H:Eq%%A t u]Eq_subst%%A%%t%%u H ([x:A]Eq%%B (f t) (f x)) (Eq_refl%%B (f t))];
Configure Equality Eq Eq_refl Eq_subst;
Configure Qrepl Eq Eq_subst Eq_sym;
[Eq_resp2 : {A|Type}{B|Type}{C|Type}{r:A->B->C}respect2%%A%%C%%B r Eq
  = [A|Type][B|Type][C|Type][r:A->B->C][t,t':A][u,u':B][H:Eq%%A t t'][H1:Eq%%B u u']Eq_subst%%A%%t'%%t (Eq_sym%%A%%t%%t' H) ([z:A]Eq%%C (r z u) (r t' u')) (Eq_subst%%B%%u'%%u (Eq_sym%%B%%u%%u' H1) ([z:B]Eq%%C (r t' z) (r t' u')) (Eq_refl%%C (r t' u')))];
