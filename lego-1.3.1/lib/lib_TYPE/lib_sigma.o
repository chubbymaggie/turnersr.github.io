Module lib_sigma Import "lib_eq_basics";
$[sigma : {A|Type}{B|A->Type}Type(sigma)//dep_pair];
$[dep_pair : {A|Type}{B|A->Type}{a:A}{b:B a}sigma%%A%%B];
$[sigma_elim : {A|Type}{B|A->Type}{C_sigma:(sigma%%A%%B)->Type}({a:A}{b:B a}C_sigma (dep_pair%%A%%B a b))->{z:sigma%%A%%B}C_sigma z];
Label (!sigma!) sigma;Label (!sigma elim!) sigma_elim;Label (!sigma dep_pair!) dep_pair;[[A|Type][B|A->Type][C_sigma:(sigma|A|B)->Type][f_dep_pair:{a:A}{b:B a}C_sigma (dep_pair a b)][a:A][b:B a]   sigma_elim C_sigma f_dep_pair (dep_pair a b)  ==>  f_dep_pair a b]
;
[sigma_rec : {A|Type}{B|A->Type}{T|Type}({a:A}{b:B a}T)->{z:sigma%%A%%B}T
  = [A|Type][B|A->Type][T|Type]sigma_elim%%A%%B ([_:sigma%%A%%B]T)];
[sigma_ind : {A|Type}{B|A->Type}{P:(sigma%%A%%B)->Prop}({a:A}{b:B a}P (dep_pair%%A%%B a b))->{z:sigma%%A%%B}P z
  = [A|Type][B|A->Type][P:(sigma%%A%%B)->Prop]sigma_elim%%A%%B P];
[sig_pi1 : {A|Type}{B|A->Type}{z:sigma%%A%%B}A
  = [A|Type][B|A->Type]sigma_rec%%A%%B%%A ([a:A][_:B a]a)];
[sig_pi2 : {A|Type}{B|A->Type}{z:sigma%%A%%B}B (sig_pi1%%A%%B z)
  = [A|Type][B|A->Type]sigma_elim%%A%%B ([x:sigma%%A%%B]B (sig_pi1%%A%%B x)) ([a:A][b:B a]b)];
[dep_pair_eta : {A|Type}{B|A->Type}{x:sigma%%A%%B}Eq%%(sigma%%A%%B) x (dep_pair%%A%%B (sig_pi1%%A%%B x) (sig_pi2%%A%%B x))
  = [A|Type][B|A->Type][x:sigma%%A%%B]sigma_ind%%A%%B ([x'4:sigma%%A%%B]Eq%%(sigma%%A%%B) x'4 (dep_pair%%A%%B (sig_pi1%%A%%B x'4) (sig_pi2%%A%%B x'4))) ([a:A][b:B a]Eq_refl%%(sigma%%A%%B) (dep_pair%%A%%B a b)) x];
[sig_pi1_inj : {A|Type}{B|A->Type}{x,y:sigma%%A%%B}(Eq%%(sigma%%A%%B) x y)->Eq%%A (sig_pi1%%A%%B x) (sig_pi1%%A%%B y)
  = [A|Type][B|A->Type][x,y:sigma%%A%%B][H:Eq%%(sigma%%A%%B) x y]Eq_resp%%(sigma%%A%%B)%%A (sig_pi1%%A%%B)%%x%%y H];
[Sigma : {A:Type}{B:A->Type}Type(sigma)
  = [A:Type][B:A->Type]sigma|A|B];
[Prod : {A:Type}{B:Type}Type(sigma)
  = [A:Type][B:Type]Sigma A ([_:A]B)];
[Pr : {A|Type}{B|Type}{a:A}{b:B}sigma%%A%%([_:A]B)
  = [A|Type][B|Type]dep_pair|A|([_:A]B)];
